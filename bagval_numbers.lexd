PATTERN decimal
rootDec dec

PATTERN centi
rootCent cent

PATTERN milli
rootCent mil

PATTERN singles
rootInit[DaNumber] end[DaNumber]
rootInit[RaNumber] end[RaNumber] # ра, Кибрик et al. С. 155

PATTERN DaSuffixedNums
decimal end[DaNumber]
milli end[DaNumber]
centi end[DaNumber]

PATTERN NomNumbersAgr
singles ( OblAdjSingular[OblSu] | OblAdjPlural[OblPlLu] )
DaSuffixedNums ( OblAdjSingular[OblSu] | OblAdjPlural[OblPlLu] )

PATTERN NomNumbersNonAgr
singles OblAdjSingular[OblFLi]
singles OblAdjSingular[OblNLi]
singles OblAdjPlural[OblPlLi]
DaSuffixedNums OblAdjSingular[OblLi]
DaSuffixedNums OblAdjSingular[OblNLi]
DaSuffixedNums OblAdjPlural[OblPlLi]

PATTERN OrdNumbersSer1
singles ordinalOpt? ordinal[ser1] 
DaSuffixedNums ordinalOpt? ordinal[ser1]

PATTERN OrdNumbersSer2
singles ordinalOpt ordinal[ser2] 
DaSuffixedNums ordinalOpt ordinal[ser2]

PATTERN OblAdjAgr
agrFinal[Msg] OblSingular[OblSu]
agrFinal[Hpl] OblPlural[OblPlLu]

PATTERN OblAdjNonAgr
agrFinal[Fsg] OblSingular[OblLi]
agrFinal[Nsg] OblSingular[OblLi]
agrFinal[Npl] OblPlural[OblPlLi]

PATTERN OblAdjDative
agrFinal[Msg] DatExcMin[OblSu]
agrFinal[Fsg] DatExcMin[OblLi]
agrFinal[Nsg] DatExcMin[OblLi]
agrFinal[Hpl] DatExcMin[OblPlLu]
agrFinal[Npl] DatExcMin[OblLi]

PATTERN OblAdjSup
agrFinal[Msg] SupExcMin[OblSu] directCase
agrFinal[Fsg] SupExcMin[OblLi] directCase
agrFinal[Nsg] SupExcMin[OblLi] directCase
agrFinal[Hpl] SupExcMin[OblPlLu] directCase
agrFinal[Npl] SupExcMin[OblLi] directCase

PATTERN LiFusion
SupExceptions[OblFLi]
SupExceptions[OblNLi]
DatExceptions[OblFLi]
DatExceptions[OblNLi]

PATTERN PronModifiers
NegPronounSuffix
IndefPronounSuffix

PATTERN CasesGenAgr
CaseMain[ErgR,-nullNom]
genitiveCase[GenAgr]
locMain directCase

PATTERN CasesGenNonAgr
CaseMain[ErgR,-nullNom]
genitiveCase[-GenAgr]
locMain directCase

PATTERN AddCasesMsg
CaseMain[nullNom]
DatExcMin[OblSu]
SupExcMin[OblSu] directCase

PATTERN AddCasesFNsg
CaseMain[nullNom]
DatExcMin[OblLi]
SupExcMin[OblLi] directCase

PATTERN AddCasesHpl
CaseMain[nullNom]
DatExcMin[OblPlLu]
SupExcMin[OblPlLu] directCase

PATTERN AddCasesNpl
CaseMain[nullNom]
DatExcMin[OblLi]
SupExcMin[OblLi] directCase

# ----------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------
# MAIN PATTERNS
PATTERNS
# regular numbers
#
rootOne[norm] agrFinal[-Hpl,-Npl]
singles
decimal # аца
centi # бешен
DaSuffixedNums
#
#forms with links
#
decimal decComp # ацал, link in 11-19
rootDec conjDec # ац, link in 21-29
centi conjCentMil  
milli conjCentMil # links in 101-199, 10001-1999
#
#nominalized cardinal numbers
#
singles DatExceptions[-OblPlRu,-OblPlDu] # negSuffix[pst]?
DaSuffixedNums DatExceptions[-OblPlRu,-OblPlDu] # negSuffix[pst]?
NomNumbersAgr CasesGenAgr # negSuffix[pst]?
NomNumbersNonAgr CasesGenNonAgr # negSuffix[pst]?
#
#collective numbers
#
singles col 
decimal col 
DaSuffixedNums col
#
#ordinal numbers
#
rootOne[ord]
OrdNumbersSer1 agrFinal
OrdNumbersSer2
#
#nominalized ordinals
#
OrdNumbersSer1 agrFinal CaseMain[nullNom] # negSuffix[pst]?
OrdNumbersSer1 OblAdjAgr CasesGenAgr # negSuffix[pst]?
OrdNumbersSer1 OblAdjNonAgr CasesGenNonAgr # negSuffix[pst]?
OrdNumbersSer1 OblAdjDative # negSuffix[pst]?
OrdNumbersSer1 OblAdjSup # negSuffix[pst]?
#
#distributional numbers
#
rootOne[red] agrFinal # цецеб = 1
rootCent centDist cent end[DaNumber]
rootCent milDist mil end[DaNumber]?
decDist dec ( end[DaNumber] | end[RaNumber] ) # гьабдигьабда = 10
2xRootInit[excl] # 2
2xRootInit[-excl,DaNumber] end[DaNumber]
2xRootInit[-excl,RaNumber] end[RaNumber]
2xRootDec dec
#
#adjective agreement
#
agrInitial adjDouble agrFinal # can agree with 2 heads, see Kibrik et al.
adjSingle agrFinal
#
#nominalized adjectives
#double
agrInitial[Msg] adjDouble agrFinal[Msg] ( CaseMain[nullNom] | ( DatExcMin[OblSu] | SupExcMin[OblSu] directCase ) )
agrInitial[Fsg] adjDouble agrFinal[Fsg] ( CaseMain[nullNom] | ( DatExcMin[OblLi] | SupExcMin[OblLi] directCase ) )
agrInitial[Nsg] adjDouble agrFinal[Nsg] ( CaseMain[nullNom] | ( DatExcMin[OblLi] | SupExcMin[OblLi] directCase ) )
agrInitial[Hpl] adjDouble agrFinal[Hpl] ( CaseMain[nullNom] | ( DatExcMin[OblPlLu] | SupExcMin[OblPlLu] directCase ) )
agrInitial[Npl] adjDouble agrFinal[Npl] ( CaseMain[nullNom] | ( DatExcMin[OblLi] | SupExcMin[OblLi] directCase ) )
agrInitial[Msg] adjDouble agrFinal[Msg] OblSingular[OblSu] CasesGenAgr
agrInitial[Fsg] adjDouble agrFinal[Fsg] OblSingular[OblLi] CasesGenNonAgr 
agrInitial[Nsg] adjDouble agrFinal[Nsg] OblSingular[OblLi] CasesGenNonAgr
agrInitial[Hpl] adjDouble agrFinal[Hpl] OblPlural[OblPlLu] CasesGenAgr 
agrInitial[Npl] adjDouble agrFinal[Npl] OblPlural[OblPlLi] CasesGenNonAgr 
#single
adjSingle agrFinal CaseMain[nullNom]
adjSingle OblAdjAgr CasesGenAgr
adjSingle OblAdjNonAgr CasesGenNonAgr
adjSingle OblAdjDative # negSuffix[pst]?
#
#personal pronouns
#
PerPronounStems genitiveCase[GenAgr] # negSuffix[pst]?
PerPronounStems[PrExc] CaseMain[ErgR,-RegErg,-nullNom] # negSuffix[pst]?
PerPronounStems[-PrExc] CaseMain[ErgR] # negSuffix[pst]?
PerPronounExc # negSuffix[pst]?
PerPronounStems locMain directCase
#
#demonstrative pronouns
#
DemPronoun agrFinal CaseMain[nullNom]
# vocab plurals
DemPronoun agrFinal[Npl] OblSingular[OblU] ( CaseMain[ErgR,-nullNom] | genitiveCase[-GenAgr] ) # o-r-u , see vocab, 580
DemPronoun agrFinal[Npl] OblSingular[OblU] locMain directCase
DemPronoun agrFinal[Hpl] OblPlural[OblPlLu] ( CaseMain[ErgR,-nullNom] | genitiveCase[GenAgr] ) # o-ba-lu- , see vocab, 580
DemPronoun agrFinal[Hpl] OblPlural[OblPlLu] locMain directCase
# Kibrik plurals
DemPronoun OblAdjPlural[OblPlRu] ( CaseMain[ErgR,-nullNom] | genitiveCase[GenAgr] )
DemPronoun ( DatExceptions[OblPlRu] | SupExceptions[OblPlRu] )
DemPronoun OblAdjPlural[OblPlRi] ( CaseMain[ErgR,-nullNom] | genitiveCase[-GenAgr] )
DemPronoun ( OblAdjPlural[OblPlRu] | OblAdjPlural[OblPlRi] ) locMain directCase
# F / N sg
DemPronoun ( OblAdjSingular[OblFLi] | OblAdjSingular[OblNLi] ) ( CaseMain[ErgR,-nullNom] | genitiveCase[-GenAgr] )
DemPronoun LiFusion
DemPronoun ( OblAdjSingular[OblFLi] | OblAdjSingular[OblNLi] ) locMain directCase
# M sg
DemPronoun OblAdjSingular[OblSu] ( CaseMain[ErgR,-nullNom] | genitiveCase[GenAgr] )
DemPronoun ( DatExceptions[OblSu] | SupExceptions[OblSu] )
DemPronoun OblAdjSingular[OblSu] locMain directCase
#
#logophoric pronouns + reflexive pronouns, see Kibrik et al. 162-163
#
LogPronoun[nom] agrFinal CaseMain[nullNom] RefSuffix?
# F / N sg
LogPronoun[obl] ( OblAdjSingular[OblFLi] | OblAdjSingular[OblNLi] ) CasesGenNonAgr RefSuffix?
LogPronoun[obl] LiFusion RefSuffix?
# M sg
LogPronoun[obl] OblAdjSingular[OblSu] CasesGenAgr RefSuffix?
LogPronoun[obl] ( DatExceptions[OblSu] | SupExceptions[OblSu] ) RefSuffix?
# plurals
LogPronoun[obl] OblAdjPlural[OblPlDu] CasesGenAgr RefSuffix?
LogPronoun[obl] ( DatExceptions[OblPlDu] | SupExceptions[OblPlDu] ) RefSuffix?
LogPronoun[obl] OblAdjPlural[OblPlDiri] CasesGenNonAgr RefSuffix?
#
#interrogative & negative pronouns
#
InterPronounExc PronModifiers? # nominative, see Kibrik et al, 164 & vocab, 580
InterPronoun[H] CasesGenAgr PronModifiers?
InterPronoun[H] DatExcMin[pron] PronModifiers?
InterPronoun[N] OblSingular[OblLi] CasesGenNonAgr PronModifiers?
#which pronoun
WhichPronoun ( agrInitial[Msg] | ( agrInitial[Fsg] | agrInitial[Nsg] ) ) WhichInfix[sg] CaseMain[nullNom] PronModifiers?
WhichPronoun ( agrInitial[Hpl] | agrInitial[Npl] ) WhichInfix[pl] CaseMain[nullNom] PronModifiers?
WhichPronoun agrInitial[Msg] WhichInfix[sg] OblSingular[OblSu] CasesGenAgr PronModifiers?
WhichPronoun agrInitial[Fsg] WhichInfix[sg] OblSingular[OblLi] CasesGenNonAgr PronModifiers?
WhichPronoun agrInitial[Nsg] WhichInfix[sg] OblSingular[OblLi] CasesGenNonAgr PronModifiers?
WhichPronoun agrInitial[Hpl] WhichInfix[pl] OblPlural[OblPlU] CasesGenAgr PronModifiers?
WhichPronoun agrInitial[Npl] WhichInfix[pl] OblPlural[OblPlU] CasesGenNonAgr PronModifiers?
WhichPronoun agrInitial[Msg] WhichInfix[sg] ( DatExcMin[-OblPlLu,-OblPlAlu,-pron] | SupExcMin[-OblPlLu,-OblPlAlu] directCase )
#number interrogative
NumPronoun CaseMain[nullNom] PronModifiers?
NumPronoun OblAdjSingular[OblSu] CasesGenAgr PronModifiers?
NumPronoun ( OblAdjSingular[OblFLi] | OblAdjSingular[OblNLi] ) CasesGenNonAgr PronModifiers?
NumPronoun OblPlural[OblPlAlu] CasesGenAgr PronModifiers?
NumPronoun ( DatExceptions[OblSu] | ( DatExceptions[OblFLi] | DatExceptions[OblNLi] ) ) PronModifiers?
NumPronoun ( SupExceptions[OblSu] | ( SupExceptions[OblFLi] | SupExceptions[OblNLi] ) ) PronModifiers?
NumPronounExc[sup] directCase
NumPronounExc[-sup]
#"Each" pronoun
EachPronoun agrMiddle[Msg] EachPronoun agrMiddle[Msg] AddCasesMsg
EachPronoun agrMiddle[Fsg] EachPronoun agrMiddle[Fsg] AddCasesFNsg
EachPronoun agrMiddle[Nsg] EachPronoun agrMiddle[Nsg] AddCasesFNsg
EachPronoun agrMiddle[Msg] EachPronoun agrMiddle[Msg] OblSingular[OblSu] CasesGenAgr
EachPronoun agrMiddle[Fsg] EachPronoun agrMiddle[Fsg] OblSingular[OblLi] CasesGenNonAgr
EachPronoun agrMiddle[Nsg] EachPronoun agrMiddle[Nsg] OblSingular[OblLi] CasesGenNonAgr
#Interrogative adjective pronoun
InterAdjPronoun agrFinal[Msg] AddCasesMsg
InterAdjPronoun ( agrFinal[Fsg] | agrFinal[Nsg] ) AddCasesFNsg
InterAdjPronoun agrFinal[Msg] OblSingular[OblSu] CasesGenAgr
InterAdjPronoun ( agrFinal[Fsg] | agrFinal[Nsg] ) OblSingular[OblLi] CasesGenNonAgr
InterAdjPronoun agrFinal[Hpl] AddCasesHpl
InterAdjPronoun agrFinal[Npl] AddCasesNpl 
InterAdjPronoun agrFinal[Hpl] OblPlural[OblPlLu] CasesGenAgr
InterAdjPronoun agrFinal[Npl] OblPlural[OblPlLi] CasesGenNonAgr
#indef pronoun ser. #2
InterPronounExc[Hsg] CaseMain[nullNom] ( AltIndefPronounSuffix[Msg] | AltIndefPronounSuffix[Fsg] )
InterPronounExc[Nsg] CaseMain[nullNom] AltIndefPronounSuffix[Nsg]
InterPronounExc[Hsg] CaseMain[nullNom] AltIndefPronounSuffix[Hpl]
InterPronounExc[Npl] CaseMain[nullNom] AltIndefPronounSuffix[Npl]
InterPronoun[H] CasesGenAgr ( AltIndefPronounSuffix[Hpl] | ( AltIndefPronounSuffix[Msg] | AltIndefPronounSuffix[Fsg] ) )
InterPronoun[H] ( DatExcMin[pron] | SupExcMin[pron] directCase ) ( AltIndefPronounSuffix[Hpl] | ( AltIndefPronounSuffix[Msg] | AltIndefPronounSuffix[Fsg] ) )
InterPronoun[N] OblAdjSingular[OblNLi] CasesGenNonAgr AltIndefPronounSuffix[Nsg]
InterPronoun[N] ( DatExcMin[OblLi] | SupExcMin[OblLi] directCase ) AltIndefPronounSuffix[Nsg]
InterPronoun[N] OblAdjPlural[OblPlLi] CasesGenNonAgr AltIndefPronounSuffix[Npl]
InterPronoun[N] ( DatExcMin[OblLi] | SupExcMin[OblLi] directCase ) AltIndefPronounSuffix[Npl]
#anypronoun
AnyPronoun agrFinal[Msg] AddCasesMsg
AnyPronoun ( agrFinal[Fsg] | agrFinal[Nsg] ) AddCasesFNsg
AnyPronoun agrFinal[Msg] OblSingular[OblSu] CasesGenAgr
AnyPronoun ( agrFinal[Fsg] | agrFinal[Nsg] ) OblSingular[OblLi] CasesGenNonAgr
AnyPronoun agrFinal[Hpl] AddCasesHpl
AnyPronoun agrFinal[Npl] AddCasesNpl 
AnyPronoun agrFinal[Hpl] OblPlural[OblPlLu] CasesGenAgr
AnyPronoun agrFinal[Npl] OblPlural[OblPlLi] CasesGenNonAgr
#allpronoun
agrInitial[Msg] AllPronoun agrMiddle[Msg] AddCasesMsg DaPostfix
agrInitial[Fsg] AllPronoun agrMiddle[Fsg] AddCasesFNsg DaPostfix
agrInitial[Nsg] AllPronoun agrMiddle[Nsg] AddCasesFNsg DaPostfix
agrInitial[Hpl] AllPronoun agrMiddle[Hpl] AddCasesHpl DaPostfix
agrInitial[Nsg] AllPronoun agrMiddle[Npl] AddCasesNpl DaPostfix
agrInitial[Msg] AllPronoun agrMiddle[Msg] OblSingular[OblSu] CasesGenAgr DaPostfix
agrInitial[Fsg] AllPronoun agrMiddle[Fsg] OblSingular[OblLi] CasesGenNonAgr DaPostfix
agrInitial[Nsg] AllPronoun agrMiddle[Nsg] OblSingular[OblLi] CasesGenNonAgr DaPostfix
agrInitial[Hpl] AllPronoun agrMiddle[Hpl] OblSingular[OblSu] CasesGenAgr DaPostfix
agrInitial[Nsg] AllPronoun agrMiddle[Npl] OblPlural[OblPlLi] CasesGenNonAgr DaPostfix
#universal ser. #3, see Kibrik et al. 166
InterPronounExc[Hsg] IndefPronounSuffix ( AddCasesMsg | AddCasesFNsg )
InterPronounExc[Hsg] IndefPronounSuffix OblSingular[OblSu] CasesGenAgr
InterPronounExc[Hsg] IndefPronounSuffix OblSingular[OblLi] CasesGenNonAgr 
InterPronounExc[Nsg] IndefPronounSuffix ( OblSingular[OblLi] CasesGenNonAgr | AddCasesFNsg )
InterPronounExc[Npl] IndefPronounSuffix ( OblPlural[OblPlLi] CasesGenNonAgr | AddCasesNpl )
#Misc. pronouns
HowPronoun ( AltIndefPronounSuffix | PronModifiers )?
WhenPronoun ( AltIndefPronounSuffix | PronModifiers )?
NumPronoun ( AltIndefPronounSuffix | PronModifiers )?
LocPronoun ( AltIndefPronounSuffix | PronModifiers )?
InterAdjPronoun ( AltIndefPronounSuffix | PronModifiers )?

# ----------------------------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------
# LEXICON ENTRIES
#
# COMMON MARKERS
#
LEXICON negSuffix
<neg>:чӀи[pst]
<neg>:чӀе[fut]

# -----------------------------------------------------------------------------------------------
# NUMBER DERIVATION
# 
LEXICON end
<num>:да[DaNumber]
<num>:ра[RaNumber]

LEXICON col
<col>:ла

# number modifiers
# 
LEXICON ordinal
<ord>:ло[ser1]
<ord>:ла[ser2]

LEXICON ordinalOpt
:ла

LEXICON dec
<*>гьацӀа<num><ten>:ацӀа

LEXICON conjDec
<*>гьацӀа<num><ten>:ацӀ # 21-29

LEXICON cent
<*>бешенда<num><hundred>:бешен

LEXICON mil
<*>азарда<num><thousand>:азар

# distributional number modifiers
#
LEXICON decDist
цев<num><distr>:гьацӀигь

LEXICON centDist
<distr>:беши

LEXICON milDist
<distr>:ази

# number links
# 
LEXICON decComp
<lnk>:л # 11-19

LEXICON conjCentMil
<lnk>:чӀекӀуб

# --------------------------------------------------------------------------------------------
# NOMINAL INFLECTION
# Oblique stem markers
#
LEXICON OblSingular
<obl>:[OblZero]
<obl>:а[OblA]
<obl>:и[OblI]
<obl>:е[OblE]
<obl>:у[OblU]
<obl>:щу[OblSu]
<obl>:лу[OblLu]
<obl>:лъи[OblLi]

LEXICON OblPlural
<obl>:а[OblPlA]
<obl>:алу[OblPlAlu]
<obl>:лу[OblPlLu]
<obl>:лъи[OblPlLi]
<obl>:у[OblPlU]

LEXICON OblAdjSingular
<M><sg><obl>:щу[OblSu]
<F><sg><obl>:лъи[OblFLi]
<N><sg><obl>:лъи[OblNLi]

LEXICON OblAdjPlural
<H><pl><obl>:лу[OblPlLu]
<H><pl><obl>:алу[OblPlAlu]
<N><pl><obl>:лъи[OblPlLi]
<H><pl><obl>:ру[OblPlRu]
<N><pl><obl>:ри[OblPlRi]
<H><pl><obl>:ду[OblPlDu]
<N><pl><obl>:дири[OblPlDiri]

# Noun plural suffixes
#
LEXICON PlAbs
<nom>:и

LEXICON PlMain
<pl>:{б}[PlBi]
<pl>:дар[PlDari]

# ----------------------------------------------------------------------------------------------
# CASE MARKERS
LEXICON CaseMain
<nom>:[ErgD,ErgR,nullNom]
<dat>:ла[ErgD,ErgR,RegDat]
<erg>:д[ErgD]
<erg>:р[ErgR,RegErg]
<aff>:ба[ErgD,ErgR]
<subst>:бас[ErgD,ErgR]

LEXICON DatExceptions
<M><sg><obl><dat>:ща[ErgD,ErgR,OblSu]
<F><sg><obl><dat>:лъа[ErgD,ErgR,OblFLi]
<N><sg><obl><dat>:лъа[ErgD,ErgR,OblNLi]
<N><pl><obl><dat>:лъа[ErgD,ErgR,OblPlLi]
<H><pl><obl><dat>:ла[ErgD,ErgR,OblPlLu]
<H><pl><obl><dat>:ра[ErgD,ErgR,OblPlRu] # see Kibrik et al. 162
<H><pl><obl><dat>:рва[ErgD,ErgR,OblPlRu] # see Kibrik et al. 162
<H><pl><obl><dat>:да[ErgD,ErgR,OblPlDu] # see Kibrik et al. 163
<H><pl><obl><dat>:два[ErgD,ErgR,OblPlDu] # see Kibrik et al. 163

LEXICON DatExcMin
<obl><dat>:ща[OblSu]
<obl><dat>:лъа[OblLi]
<obl><dat>:ла[OblPlLu]
<obl><dat>:лла[OblPlAlu]
<dat>:ха[pron]

LEXICON SupExceptions
<M><sg><obl><sup>:ща[OblSu]
<F><sg><obl><sup>:лъа[OblFLi]
<N><sg><obl><sup>:лъа[OblNLi]
<N><pl><obl><sup>:лъа[OblPlLi]
<H><pl><obl><sup>:лла[OblPlAlu]
<H><pl><obl><sup>:ла[OblPlLu]
<H><pl><obl><sup>:ра[OblPlRu] # see Kibrik et al. 162
<H><pl><obl><sup>:рва[OblPlRu] # see Kibrik et al. 162
<H><pl><obl><sup>:да[OblPlDu] # see Kibrik et al. 163
<H><pl><obl><sup>:два[OblPlDu] # see Kibrik et al. 163

LEXICON SupExcMin
<obl><sup>:ща[OblSu]
<obl><sup>:лъа[OblLi]
<obl><sup>:ла[OblPlLu]
<obl><sup>:лла[OblPlAlu]
<dat>:ха[pron]

LEXICON genitiveCase
<gen>:лъ
<gen><M><sg>:в[GenAgr]
<gen><F><sg>:й[GenAgr]
<gen><N><sg>:б[GenAgr]
<gen><H><pl>:ба[GenAgr]
<gen><N><pl>:р[GenAgr]

# ---------------------------------------------------------------------------------------------
# AGREEMENT MARKERS
LEXICON agrInitial
<M><sg>:в[Msg]
<F><sg>:й[Fsg]
<N><sg>:б[Nsg]
<H><pl>:б[Hpl]
<N><pl>:р[Npl]

LEXICON agrMiddle
<M><sg>:в[Msg]
<F><sg>:й[Fsg]
<N><sg>:{б}[Nsg]
<H><pl>:{б}[Hpl]
<N><pl>:{р}[Npl]

LEXICON agrFinal
<M><sg>:в[Msg]
<F><sg>:й[Fsg]
<N><sg>:{б}[Nsg]
<H><pl>:{б}а[Hpl]
<N><pl>:{р}[Npl]

#----------------------------------------------------------------------------------------------
# LOCALIZATION MARKERS
LEXICON locMain
<sup>:ла
<sub>:кьи
<in>:{и}ни # irregular, must be configured separately, see Kibrik et al. 142
<inter>:лъи
<cont>:чӀ
<ad>:х
<locposs>:лъа

LEXICON directCase
<ess>:
<lat>:
<el>:{и}с
<trans>:{и}сини

# ---------------------------------------------------------------------------------------------
# ROOTS
# number roots
# 
LEXICON rootOne # 1
цеб<num>:це[norm]
цеб<num><dist>:цеце[red]
цеб<num><ord>:гьечӀисес[ord]

LEXICON rootInit
чӀеда<num>:чӀ{е}[DaNumber,RaNumber]
гьабда<num>:гьаб[DaNumber]
буъуда<num>:буъу[DaNumber,RaNumber]
иᵸщтуда<num>:иᵸщту[DaNumber,RaNumber]
инлӀида<num>:инлӀи[DaNumber,RaNumber]
гьакьуда<num>:гьакьу[DaNumber,RaNumber]
бикьида<num>:бикьи[DaNumber,RaNumber]
гьачӀвада<num>:гьачӀва[DaNumber,RaNumber]

LEXICON rootDec
цеб<num>:гь
чӀеда<num>:чӀ{е} # 2
гьабда<num>:гьаб # 3
буъуда<num>:буъ # 4
иᵸщтуда<num>:иᵸщвд # 5
инлӀида<num>:инлӀ # 6
гьакьуда<num>:гьакьв # 7
бикьида<num>:бикь # 8
гьачӀвада<num>:гьачӀв # 9

LEXICON rootCent
цеб<num>:
чӀеда<num>:чӀ{е} # 2
гьабда<num>:гьаб # 3
буъуда<num>:буъ # 4
иᵸщтуда<num>:иᵸщв # 5
инлӀида<num>:инлӀ # 6
гьакьуда<num>:гьакьв # 7
бикьида<num>:бикь # 8
гьачӀвада<num>:гьачӀа # 9

LEXICON 2xRootInit
чӀеда<num><dist>:чӀечӀе[excl]
гьабда<num><dist>:гьабдигьаб[DaNumber]
буъуда<num><dist>:бубуъу[DaNumber,RaNumber]
иᵸщтуда<num><dist>:иᵸщтуиᵸщту[DaNumber,RaNumber]
инлӀида<num><dist>:инлӀиъинлӀи[DaNumber,RaNumber]
гьакьуда<num><dist>:гьакьугьакьу[DaNumber,RaNumber]
бикьида<num><dist>:бикьибикьи[DaNumber,RaNumber]
гьачӀвада<num><dist>:гьачӀигьачӀва[DaNumber,RaNumber]

LEXICON 2xRootDec
чӀеда<num><dist>:чӀечӀ{е} # 2
гьабда<num><dist>:гьабигьаб # 3
буъуда<num><dist>:бубуъ # 4
иᵸщтуда<num><dist>:иᵸщтуиᵸщвд # 5
инлӀида<num><dist>:инлӀиъинлӀ # 6
гьакьуда<num><dist>:гьакьугьакьв # 7
бикьида<num><dist>:бикьибикь # 8
гьачӀвада<num><dist>:гьачӀигьачӀв # 9

# noun roots
#
LEXICON nounSu
има<noun>:има # father

LEXICON nounLi
гьакӀуй<noun>:гьакӀуй # woman
гьезеб<noun>:гьезеб # stock

# adjective roots
#
LEXICON adjDouble
багьаруб<adjective>:агьару

LEXICON adjSingle
гьацӀаб<adjective>:гьацӀа

#pronoun roots
#
LEXICON PerPronounStems
де<pronoun><1P><sg><obl>:ди[PrExc]
ме<pronoun><2P><sg><obl>:ду[PrExc]
ищи<pronoun><1P><pl><incl><obl>:ищи
инлӀи<pronoun><1P><pl><excl><obl>:инлӀи
бишти<pronoun><2P><pl><obl>:бишти

LEXICON DemPronoun
аб<pronoun><3P>:а
об<pronoun><3P>:о

LEXICON LogPronoun
эб<pronoun><log><3P>:э[nom]
эб<pronoun><log><3P>:ин[obl]

LEXICON InterPronoun
эба<pronoun><inter><H><obl>:лъо[H]
эба<pronoun><inter><N>:э[N]

LEXICON InterAdjPronoun
эщдуб<pronoun><inter>:эщду
эщтуб<pronoun><inter>:эщту

LEXICON WhichPronoun
эбел<pronoun><inter>:э

LEXICON EachPronoun # Kibrik et al., 167
эбэб<pronoun>:э

LEXICON NumPronoun # 2 possible alternations, according to Kibrik et al., 164
чвам<pronoun><inter>:чвам 
чом<pronoun><inter>:чом

LEXICON HowPronoun
эщта<pronoun><inter>:эщта

LEXICON WhenPronoun
инда<pronoun><inter>:инда

LEXICON LocPronoun
инди<pronoun><inter>:инди

LEXICON AllPronoun
бусӀабда<pronoun>:усӀа

LEXICON AnyPronoun
бокьироб<pronoun>:бокьиро

#pronoun modifiers
#
LEXICON NegPronounSuffix
<neg>:дала

LEXICON IndefPronounSuffix
<indef>:гӀагила

LEXICON AltIndefPronounSuffix
<N><sg><indef><N><sg>:вукӀавола[Msg]
<N><sg><indef><N><sg>:йукӀайола[Fsg]
<N><sg><indef><N><sg>:букӀабола[Nsg]
<N><sg><indef><N><sg>:букӀурола[Hpl]
<N><sg><indef><N><sg>:рукӀарола[Npl]

LEXICON RefSuffix
<ref>:да

LEXICON DaPostfix
:да

LEXICON WhichInfix
:ел[sg]
:ал[pl]

#pronoun exclusions
#
LEXICON PerPronounExc
де<pronoun><1P><sg><nom>:де
де<pronoun><1P><sg><erg>:ден
ме<pronoun><2P><sg><nom>:ме
ме<pronoun><2P><sg><erg>:мен
инлӀи<pronoun><1P><pl><excl><nom>:инлӀи
ищи<pronoun><1P><pl><incl><nom>:ищи
бишти<pronoun><2P><pl><obl><nom>:бишти
ищи<pronoun><1P><pl><incl><obl><dat>:ища
ищи<pronoun><1P><pl><incl><obl><sup>:ища
инлӀи<pronoun><1P><pl><excl><obl><dat>:инлӀа
инлӀи<pronoun><1P><pl><excl><obl><sup>:инлӀа
бишти<pronoun><2P><pl><obl><dat>:бишда
бишти<pronoun><2P><pl><obl><sup>:бишда

LEXICON InterPronounExc
эба<pronoun><inter><H><nom>:има
эба<pronoun><inter><N><nom>:эба
эба<pronoun><inter><H><nom>:эм[Hsg]
эба<pronoun><inter><N><sg><nom>:эб[Nsg]
эба<pronoun><inter><N><pl><nom>:эр[Npl]

LEXICON NumPronounExc
чвам<pronoun><inter><H><pl><obl><dat>:чвамала
чвам<pronoun><inter><H><pl><obl><sup>:чвамала[sup]
чом<pronoun><inter><H><pl><obl><dat>:чомала
чом<pronoun><inter><H><pl><obl><sup>:чомала[sup]